{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/pages/moviespage/MoviesPageStyled.js","components/pages/moviespage/MoviesPage.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Wrapper","styled","div","initialState","searchMovies","query","serching","MoviesPage","useState","state","setState","history","useHistory","location","useLocation","match","useRouteMatch","getMovies","a","fetchMovies","result","prev","useEffect","console","log","then","MoviesPageStyled","className","onSubmit","e","preventDefault","push","search","type","placeholder","onChange","value","target","map","movie","index","to","pathname","url","id","movieId","title"],"mappings":"mMAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,K,6qDIH9F,IA0EeC,E,MA1ECC,EAAOC,IAAV,KCQPC,EAAe,CACnBC,aAAc,GACdC,MAAO,GACPC,SAAU,SA4FGC,UA1FI,WAAO,IAAD,EACGC,mBAAS,eAAKL,IADjB,mBAChBM,EADgB,KACTC,EADS,KAEjBC,EAAUC,cACVC,EAAWC,cACXC,EAAQC,cAORC,EAAS,uCAAG,WAAOZ,GAAP,eAAAa,EAAA,sEACKC,YAAYd,GADjB,OACVe,EADU,OAGhBV,GAAS,SAACW,GAAD,mBAAC,eACLA,GADI,IAEPjB,aAAa,YAAKgB,QALJ,2CAAH,sDAmBfE,qBAAU,WACRC,QAAQC,IAAI,sBAAuBX,GAC9BA,EAASJ,OAGZI,EAASJ,MAAMJ,OACbY,EAAUJ,EAASJ,MAAMJ,OAAOoB,MAAK,kBACnCf,GAAS,SAACW,GAAD,mBAAC,eAAeA,GAASR,EAASJ,eAIhD,IAzCoB,IA2CfL,EAAwBK,EAAxBL,aAAcC,EAAUI,EAAVJ,MAEtB,OACE,cAACqB,EAAD,UACE,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,gBAAd,oBACA,uBAAMA,UAAU,eAAeC,SA7BhB,SAACC,GACpBA,EAAEC,iBACFb,EAAUR,EAAMJ,OAEhBM,EAAQoB,KAAR,2BACKlB,GADL,IAEEmB,OAAO,UAAD,OAAYvB,EAAMJ,WAuBtB,UACE,uBACEsB,UAAU,qBACVM,KAAK,OACLC,YAAY,gBACZC,SAhDa,SAACN,GAAO,IACrBO,EAAUP,EAAEQ,OAAZD,MACR1B,EAAS,CAAEL,MAAO+B,EAAO9B,SAAU,UA+C3B8B,MAAO/B,IAET,wBAAQ4B,KAAK,SAASN,UAAU,mBAAhC,SACE,sBAAMA,UAAU,yBAAhB,yBAGJ,oBAAIA,UAAU,sBAAd,SACGvB,GACCA,EAAakC,KAAI,SAACC,EAAOC,GAAR,OACf,oBACEb,UAAU,2BADZ,SAIE,cAAC,IAAD,CACEA,UAAU,2BACVc,GAAI,CACFC,SAAS,GAAD,OAAK3B,EAAM4B,IAAX,YAAkBJ,EAAMK,IAEhCnC,MAAO,CACLZ,KAAMgB,EAAS6B,SACfrC,MAAOA,EACPwC,QAASN,EAAMK,KARrB,SAYGL,EAAMO,SAhBX,UAEUP,EAAMK,IAFhB,OAEqBJ","file":"static/js/MoviesPage.71a75138.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  .movies {\r\n    padding: 20px;\r\n    border-bottom: 2px solid #ffdab9;\r\n    box-shadow: 7px 7px 12px 3px rgba(0, 0, 0, 0.51);\r\n  }\r\n  .movies__title {\r\n    font-weight: 500;\r\n    font-size: 20px;\r\n    line-height: 1.63;\r\n    color: #696969;\r\n  }\r\n  .movies__form {\r\n    display: flex;\r\n    align-items: center;\r\n    width: 100%;\r\n    max-width: 600px;\r\n    overflow: hidden;\r\n  }\r\n  .movies__form-input {\r\n    display: inline-block;\r\n    width: 100%;\r\n    height: 50px;\r\n    font-size: 20px;\r\n    border: 2px solid #ffdab9;\r\n    border-radius: 4px;\r\n    outline: none;\r\n    padding-left: 15px;\r\n  }\r\n  .movies__form-input::placeholder {\r\n    font-size: 20px;\r\n  }\r\n  .movies__form-btn {\r\n    background-color: #ffdab9;\r\n    color: #696969;\r\n    font-size: 20px;\r\n    border: none;\r\n    border-radius: 4px;\r\n    height: 56px;\r\n    cursor: pointer;\r\n    outline: none;\r\n    margin-left: 20px;\r\n    padding: 10px 25px;\r\n  }\r\n  .movies__form-btn:hover {\r\n    border: 2px solid#ffdab9;\r\n    background-color: white;\r\n    color: #ffdab9;\r\n  }\r\n\r\n  .movies__form-btn-label {\r\n    font-size: 18px;\r\n  }\r\n  .movies__search-list {\r\n    padding: 0;\r\n    margin: 0;\r\n    list-style: none;\r\n    margin-top: 40px;\r\n  }\r\n  .movies__search-list-item:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  .movies__search-list-link {\r\n    font-weight: 400;\r\n    font-size: 15px;\r\n    line-height: 1.63;\r\n    color: #696969;\r\n    text-decoration: none;\r\n  }\r\n  .movies__search-list-link:hover {\r\n    color: #ff7f50;\r\n  }\r\n`;\r\n\r\nexport default Wrapper;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  NavLink,\r\n  useHistory,\r\n  useLocation,\r\n  useRouteMatch,\r\n} from \"react-router-dom\";\r\nimport { fetchMovies } from \"../../../api/api\";\r\nimport MoviesPageStyled from \"./MoviesPageStyled\";\r\n\r\nconst initialState = {\r\n  searchMovies: [],\r\n  query: \"\",\r\n  serching: \"false\",\r\n};\r\nconst MoviesPage = () => {\r\n  const [state, setState] = useState({ ...initialState });\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const match = useRouteMatch();\r\n\r\n  const onHandleChange = (e) => {\r\n    const { value } = e.target;\r\n    setState({ query: value, serching: \"true\" });\r\n  };\r\n\r\n  const getMovies = async (query) => {\r\n    const result = await fetchMovies(query);\r\n    //console.log(\"getMovies result\", result);\r\n    setState((prev) => ({\r\n      ...prev,\r\n      searchMovies: [...result],\r\n    }));\r\n  };\r\n\r\n  const onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    getMovies(state.query);\r\n    //console.log(\"MoviesPage history\", history);\r\n    history.push({\r\n      ...location,\r\n      search: `?query=${state.query}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"usseEffect location\", location);\r\n    if (!location.state) {\r\n      return;\r\n    } else {\r\n      location.state.query &&\r\n        getMovies(location.state.query).then(() =>\r\n          setState((prev) => ({ ...prev, ...location.state }))\r\n        );\r\n    }\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const { searchMovies, query } = state;\r\n\r\n  return (\r\n    <MoviesPageStyled>\r\n      <div className=\"movies\">\r\n        <h2 className=\"movies__title\">Movies</h2>\r\n        <form className=\"movies__form\" onSubmit={onFormSubmit}>\r\n          <input\r\n            className=\"movies__form-input\"\r\n            type=\"text\"\r\n            placeholder=\"Search movies\"\r\n            onChange={onHandleChange}\r\n            value={query}\r\n          />\r\n          <button type=\"submit\" className=\"movies__form-btn\">\r\n            <span className=\"movies__form-btn-label\">Search</span>\r\n          </button>\r\n        </form>\r\n        <ul className=\"movies__search-list\">\r\n          {searchMovies &&\r\n            searchMovies.map((movie, index) => (\r\n              <li\r\n                className=\"movies__search-list-item\"\r\n                key={`${movie.id}${index}`}\r\n              >\r\n                <NavLink\r\n                  className=\"movies__search-list-link\"\r\n                  to={{\r\n                    pathname: `${match.url}/${movie.id}`,\r\n\r\n                    state: {\r\n                      from: location.pathname,\r\n                      query: query,\r\n                      movieId: movie.id,\r\n                    },\r\n                  }}\r\n                >\r\n                  {movie.title}\r\n                </NavLink>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n      </div>\r\n    </MoviesPageStyled>\r\n  );\r\n};\r\n\r\nexport default MoviesPage;\r\n// class MoviesPage extends Component {\r\n//   state = {\r\n//     searchMovies: [],\r\n//     query: \"\",\r\n//     serching: false,\r\n//   };\r\n\r\n//   onHandleChange = (e) => {\r\n//     const { value } = e.target;\r\n//     this.setState({ query: value, serching: true });\r\n//   };\r\n\r\n//   onFormSubmit = (e) => {\r\n//     const { query } = this.state;\r\n//     e.preventDefault();\r\n//     fetchMovies(query).then((response) => {\r\n//       //console.log(\"response ==>>\", response);\r\n//       this.setState((prev) => ({\r\n//         ...prev,\r\n//         searchMovies: [...response],\r\n//       }));\r\n//       // this.props.history.push({\r\n//       //   search: `?query=${query}`,\r\n//       // });\r\n//     });\r\n//     //console.log(\"onFormSubmit this.state.query ==>>\", query);\r\n//   };\r\n\r\n//   render() {\r\n//     const { searchMovies } = this.state;\r\n//     return (\r\n//       <MoviesPageStyled>\r\n//         <div className=\"movies\">\r\n//           <h2>Movies</h2>\r\n//           <form className=\"movies__form\" onSubmit={this.onFormSubmit}>\r\n//             <input\r\n//               className=\"movies__form-input\"\r\n//               type=\"text\"\r\n//               placeholder=\"Search movies\"\r\n//               onChange={this.onHandleChange}\r\n//             />\r\n//             <button type=\"submit\" className=\"movies__form-btn\">\r\n//               <span className=\"movies__form-btn-label\">Search</span>\r\n//             </button>\r\n//           </form>\r\n//           <ul>\r\n//             {searchMovies.map((movie, index) => (\r\n//               <li key={`${movie.id}${index}`}>\r\n//                 <NavLink to={`/movies/${movie.id}`}>{movie.title}</NavLink>\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//           {/* {state.serching && <MoviesList dataMoviesSearch={dataMoviesSearch} />} */}\r\n//         </div>\r\n//       </MoviesPageStyled>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default MoviesPage;\r\n"],"sourceRoot":""}